@page "/CatFoodInventoryEntry"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using No_Kill_Inventory.Data
@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
@rendermode InteractiveServer

@attribute [Authorize]

<PageTitle>Cat Food Inventory Entry</PageTitle>

<AuthorizeView>
    <Authorized Context="authContext">
        <MudText Typo="Typo.h3" GutterBottom="true">Cat Food Inventory Entry</MudText>

        <EditForm Model="@Input" OnValidSubmit="HandleValidSubmit" Context="editContext">
            <DataAnnotationsValidator />
            <ValidationSummary />

            @if (formSubmitted)
            {
                <MudAlert Severity="Severity.Success" Elevation="0" Variant="Variant.Filled" Class="mb-4">
                    Form successfully submitted!
                </MudAlert>
            }

            <MudDivider Class="my-2" />

            <MudGrid Gutter="true">
                <!-- Dry -->
                <MudItem xs="6">
                    <MudText>Dry</MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudNumericField T="int" @bind-Value="Input.DryWeight" Label="Quantity (lbs)" />
                </MudItem>

                <!-- Wet -->
                <MudItem xs="6">
                    <MudText>Wet</MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudNumericField T="int" @bind-Value="Input.WetWeight" Label="Quantity (lbs)" />
                </MudItem>

                <!-- Kitty -->
                <MudItem xs="6">
                    <MudText>Kitty</MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudNumericField T="int" @bind-Value="Input.KittyWeight" Label="Quantity (lbs)" />
                </MudItem>

                <!-- Special -->
                <MudItem xs="6">
                    <MudText>Special</MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudNumericField T="int" @bind-Value="Input.SpecialWeight" Label="Quantity (lbs)" />
                </MudItem>
            </MudGrid>

            <MudButton Type="Submit" Color="Color.Primary" Class="mt-4" OnClick="@(async () =>
                                                                                 {
                                                                                     await CatItemStore(1, Input.DryWeight);
                                                                                     await CatItemStore(2, Input.KittyWeight);
                                                                                     await CatItemStore(3, Input.WetWeight);
                                                                                     await CatItemStore(4, Input.SpecialWeight);
                                                                                 })">
                Submit
            </MudButton>
        </EditForm>
    </Authorized>
</AuthorizeView>

@code {
    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();
    private bool formSubmitted = false;

    public Task HandleValidSubmit()
    {
        formSubmitted = true;
        Input = new InputModel(); // Clear form fields
        StateHasChanged();
        return Task.CompletedTask;
    }

    public async Task CatItemStore(int itemID, int qty)
    {
        using (var context = new ApplicationDbContext(new DbContextOptions<ApplicationDbContext>()))
        {
            var updateQty = context.CatItems.First(a => a.ItemID == itemID);
            updateQty.Weight += qty;
            await context.SaveChangesAsync();
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "Should input a number")]
        [Display(Name = "DryWeight")]
        public int DryWeight { get; set; }

        [Required(ErrorMessage = "Should input a number")]
        [Display(Name = "KittyWeight")]
        public int KittyWeight { get; set; }

        [Required(ErrorMessage = "Should input a number")]
        [Display(Name = "WetWeight")]
        public int WetWeight { get; set; }

        [Required(ErrorMessage = "Should input a number")]
        [Display(Name = "SpecialWeight")]
        public int SpecialWeight { get; set; }
    }
}
