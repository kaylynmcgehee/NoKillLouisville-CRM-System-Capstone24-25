@page "/Inventory/ViewInventory"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using No_Kill_Inventory.Data
@inject ApplicationDbContext Context
@rendermode InteractiveServer

@*
    Locks the page behind authentication 
*@
@attribute [Authorize]

<PageTitle>Home</PageTitle>

@* 
  <AuthorizeView> locks everything in it behind authentication
  
  This section deisplay the user's username and each table of items to see the current inventory  
*@
<AuthorizeView>
    <MudText Typo="Typo.h3">Hello, @context.User.Identity.Name</MudText>
    <MudText Typo="Typo.subtitle1">The current inventory is below.</MudText>

    <!-- Dog Inventory Table -->
    <MudText Typo="Typo.h6">Dog</MudText>
    <MudTable T="DogItem" Items="@Context.DogItems" Hover="true" Breakpoint="Breakpoint.Sm">
        <HeaderContent>
            <MudTh>Type</MudTh>
            <MudTh>Weight</MudTh>
        </HeaderContent>
        <RowTemplate Context="dog">
            <MudTd DataLabel="Type">@dog.Type</MudTd>
            <MudTd DataLabel="Weight">@dog.Weight</MudTd>
        </RowTemplate>
    </MudTable>

    <!-- Cat Inventory Table -->
    <MudText Typo="Typo.h6">Cat</MudText>
    <MudTable T="CatItem" Items="@Context.CatItems" Hover="true" Breakpoint="Breakpoint.Sm">
        <HeaderContent>
            <MudTh>Type</MudTh>
            <MudTh>Weight</MudTh>
        </HeaderContent>
        <RowTemplate Context="cat">
            <MudTd DataLabel="Type">@cat.Type</MudTd>
            <MudTd DataLabel="Weight">@cat.Weight</MudTd>
        </RowTemplate>
    </MudTable>

    <!-- Other Inventory Table -->
    <MudText Typo="Typo.h6">Other</MudText>
    <MudTable T="OtherItem" Items="@Context.OtherItems" Hover="true" Breakpoint="Breakpoint.Sm">
        <HeaderContent>
            <MudTh>Type</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Weight</MudTh>
            <MudTh>Remove</MudTh>
        </HeaderContent>
        <RowTemplate Context="other">
            <MudTd DataLabel="Type">@other.Animal</MudTd>
            <MudTd DataLabel="Description">@other.Desc</MudTd>
            <MudTd DataLabel="Weight">@other.Weight</MudTd>
            <MudTd DataLabel="Remove">
                <MudButton OnClick="@(async () => await DeleteItem(other.ItemID))" Color="Color.Error" Variant="Variant.Filled">
                    Delete
                </MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
</AuthorizeView>

@code {
    private async Task DeleteItem(int ItemID)
    {
        var item = await Context.OtherItems.FindAsync(ItemID);
        if (item != null)
        {
            Context.OtherItems.Remove(item);
            await Context.SaveChangesAsync();
        }
    }
}