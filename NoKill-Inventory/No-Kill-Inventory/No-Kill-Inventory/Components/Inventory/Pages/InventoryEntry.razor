@page "/Inventory/InventoryEntry"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using No_Kill_Inventory.Data
@rendermode InteractiveServer

@inject NavigationManager NavigationManager

@attribute [Authorize]

<PageTitle>Inventory Entry</PageTitle>

<AuthorizeView>
    <Authorized>
        <MudText Typo="Typo.h3" GutterBottom="true">Inventory Entry</MudText>

        <MudGrid>
            <MudItem xs="12" sm="4">
                <MudForm @ref="form" Model="@Input">
                    <MudText Typo="Typo.h6">All fields must be filled</MudText>
                    <MudDivider Class="my-2" />
                    <MudText Typo="Typo.subtitle1">Choose what type of food you are adding to the inventory</MudText>

                    <MudPaper Class="pa-4 mt-4">
                        <MudMenu Label="Food Type" Variant="Variant.Filled">
                            <MudMenuItem OnClick="@GoToDogFoodInventoryEntry">Dog</MudMenuItem>
                            <MudMenuItem OnClick="@GoToCatFoodInventoryEntry">Cat</MudMenuItem>
                            <MudMenuItem OnClick="@GoToOtherPetFoodInventoryEntry">Other Pets</MudMenuItem>
                        </MudMenu>
                    </MudPaper>
                </MudForm>
            </MudItem>
        </MudGrid>
    </Authorized>
</AuthorizeView>

@code {
    private void GoToDogFoodInventoryEntry() 
    {
        NavigationManager.NavigateTo("/DogFoodInventoryEntry");
    }
    private void GoToCatFoodInventoryEntry() 
    {
        NavigationManager.NavigateTo("/CatFoodInventoryEntry");
    }
    private void GoToOtherPetFoodInventoryEntry() 
    {
        NavigationManager.NavigateTo("/OtherPetFoodInventoryEntry");
    }
    
    private MudForm form;
    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    public void CatItemStore()
    {
        using (var context = new ApplicationDbContext(new DbContextOptions<ApplicationDbContext>()))
        {
            var newCatItem = new CatItem
            {
                Type = Input.TypeCat,
                Weight = Input.WeightCat
            };
            // Add saving logic here if needed
        }
    }
    
    public void DogItemStore()
    {
        using (var context = new ApplicationDbContext(new DbContextOptions<ApplicationDbContext>()))
        {
            var newDogItem = new DogItem()
            {
                Type = Input.TypeDog,
                Weight = Input.WeightDog
            };
            // Add saving logic here if needed
        }
    }
    
    public void OtherItemStore()
    {
        using (var context = new ApplicationDbContext(new DbContextOptions<ApplicationDbContext>()))
        {
            var newOtherItem = new OtherItem()
            {
                Animal = Input.Animal,
                Desc = Input.Desc,
                Weight = Input.WeightOther
            };
            // Add saving logic here if needed
        }
    }
    
    private sealed class InputModel
    {
        [Required]
        [StringLength(100, ErrorMessage = "Should input from the dropdown")]
        [Display(Name = "TypeDog")]
        public string TypeDog { get; set; }
        
        [Required]
        [Display(Name = "WeightDog")]
        public int WeightDog { get; set; }
        
        [Required]
        [StringLength(100, ErrorMessage = "Should input from the dropdown")]
        [Display(Name = "TypeCat")]
        public string TypeCat { get; set; }
        
        [Required]
        [Display(Name = "WeightCat")]
        public int WeightCat { get; set; }
        
        [Required]
        [StringLength(100, ErrorMessage = "Should input a String")]
        [Display(Name = "Animal")]
        public string Animal { get; set; }
        
        [Required]
        [StringLength(100, ErrorMessage = "Should input a String")]
        [Display(Name = "Desc")]
        public string Desc { get; set; }
        
        [Required]
        [Display(Name = "WeightOther")]
        public int WeightOther { get; set; }
    }
}