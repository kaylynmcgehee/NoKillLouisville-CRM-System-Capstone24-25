@page "/Inventory/InventoryEntry"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@using Microsoft.EntityFrameworkCore
@using No_Kill_Inventory.Data
@inject ApplicationDbContext Context
@rendermode InteractiveServer

@attribute [Authorize]

<MudText Typo="Typo.h4">Add Inventory</MudText>
<MudText Typo="Typo.body1">Fill out the forum below to add a pallet.</MudText>

<MudPaper Class="pa-16 ma-2" Outlined="true">
    <MudStack Spacing="4" AlignItems="AlignItems.Center">
        @if (_submitted)
        {
            <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Success" >Inventory Added!</MudText>
            <MudButton Variant="Variant.Filled" OnClick="@NewForm" Color="Color.Primary">
                <MudText>Add More?</MudText>
            </MudButton>
            
        }
        else
        {
            <MudSelect @bind-Value="_enumValue" Label="Select Species" Placeholder="Please Select" FullWidth="true" AdornmentColor="Color.Primary">
                @foreach (Species Item in Enum.GetValues(typeof(Species)))
                {
                    <MudSelectItem Value="@Item">@Item</MudSelectItem>
                }
            </MudSelect>
            <MudTextField @bind-Value="_locationDesc" Label="Enter Location" Placeholder="Ex: Spot 1" FullWidth="true" AdornmentColor="Color.Primary"></MudTextField>
            <MudTextField @bind-Value="_weight" Label="Enter Weight (lb)" Placeholder="Ex: 50lb" FullWidth="true" AdornmentColor="Color.Primary"></MudTextField>
            <MudStack Row="true" Spacing="16">
                <MudDatePicker Label="Enter Arrival Date" @bind-Date="_arrivalDate" Editable="true" ShowToolbar="false"/>
                <MudDatePicker Label="Enter Experation Date" @bind-Date="_expirationDate" Editable="true" ShowToolbar="false"/>
            </MudStack>

            <MudButton Disabled="@_processing" Variant="Variant.Filled" OnClick="AddPallet" Color="Color.Primary">
                @if (_processing)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Medium" Indeterminate="true"/>
                    <MudText Class="ms-2">Processing</MudText>
                }
                else
                {
                    <MudText>Add Pallet</MudText>
                }
            </MudButton>
        }
    </MudStack>
</MudPaper>


@code {
    private bool _processing = false;
    private bool _submitted = false;

    private Species _enumValue;
    private String _locationDesc;
    private int _weight;
    private DateTime? _arrivalDate;
    private DateTime? _expirationDate;
    
    async Task AddPallet()
    {
        _processing = true;
        
        Context.FoodPallets.Add( new FoodPallet
        {
            Animal = _enumValue,
            Status = Status.Alive,
            InitWeight = _weight,
            CurrentWeight = _weight,
            ArrivalDate = (DateTime)_arrivalDate,
            ExpirationDate = (DateTime)_expirationDate,
            LocationDesc = _locationDesc
        });
        
        await Context.SaveChangesAsync();
        
        _processing = false;
        _submitted = true;
    }

    async Task NewForm()
    {
        _enumValue = Species.Dog;
        _locationDesc = "";
        _arrivalDate = null;
        _expirationDate = null;

        _submitted = false;
    }
}