@page "/Recipients/View"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using No_Kill_Inventory.Data
@inject ApplicationDbContext Context

@attribute [Authorize]

<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }
    th, td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }
    tr:nth-child(even) {
        background-color: #f9f9f9;
    }
    tr:hover {
        background-color: #f1f1f1;
        cursor: pointer;
    }
    .expanded-row {
        background-color: #f4f4f4;
    }
    .details {
        padding: 10px;
        border-top: 1px solid #ddd;
    }
    .search-bar {
        margin-bottom: 20px;
        width: 300px;
    }
</style>

<PageTitle>Customers</PageTitle>

<h1>Customers</h1>

<div>
    <input type="text" @bind="SearchTerm" class="search-bar" placeholder="Search by name..." />
</div>

<table>
    <thead>
    <tr>
        <th>Name</th>
        <th>Phone</th>
        <th>Email</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var customer in FilteredCustomers)
    {
        <tr @onclick="() => ToggleCustomerDetails(customer)">
            <td>@customer.Name</td>
            <td>@customer.PhoneNumber</td>
            <td>@customer.Email</td>
        </tr>
        @if (ExpandedCustomer == customer)
        {
            <tr class="expanded-row">
                <td colspan="3">
                    <div class="details">
                        <h4>Pets</h4>
                        <ul>
                            @foreach (var pet in customer.Pets)
                            {
                                <li>@pet.Type: @pet.Name</li>
                            }
                        </ul>
                        <h4>Food Preferences</h4>
                        <ul>
                            @foreach (var food in customer.FoodPreferences)
                            {
                                <li>@food</li>
                            }
                        </ul>
                    </div>
                </td>
            </tr>
        }
    }
    </tbody>
</table>

@code {
    private List<Customer> Customers { get; set; } = new();
    private string SearchTerm { get; set; } = string.Empty;
    private Customer? ExpandedCustomer { get; set; }

    protected override void OnInitialized()
    {
        // Example customers
        Customers = new List<Customer>
        {
            new Customer
            {
                Name = "Billy",
                PhoneNumber = "123-456-7890",
                Email = "billy@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Dog", Name = "Rover" },
                    new Pet { Type = "Cat", Name = "Whiskers" }
                },
                FoodPreferences = new List<string> { "Kibble", "Chicken", "Carrots" }
            },
            new Customer
            {
                Name = "Bob",
                PhoneNumber = "987-654-3210",
                Email = "bob@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Turtle", Name = "Shelly" }
                },
                FoodPreferences = new List<string> { "Lettuce", "Cucumber", "Tomatoes" }
            },
            new Customer
            {
                Name = "Andrew",
                PhoneNumber = "555-555-5555",
                Email = "andrew@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Fish", Name = "Nemo" }
                },
                FoodPreferences = new List<string> { "Fish Flakes", "Seaweed" }
            },
            new Customer
            {
                Name = "Billy",
                PhoneNumber = "123-456-7890",
                Email = "billy@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Dog", Name = "Rover" },
                    new Pet { Type = "Cat", Name = "Whiskers" }
                },
                FoodPreferences = new List<string> { "Kibble", "Chicken", "Carrots" }
            },
            new Customer
            {
                Name = "Bob",
                PhoneNumber = "987-654-3210",
                Email = "bob@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Turtle", Name = "Shelly" }
                },
                FoodPreferences = new List<string> { "Lettuce", "Cucumber", "Tomatoes" }
            },
            new Customer
            {
                Name = "Andrew",
                PhoneNumber = "555-555-5555",
                Email = "andrew@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Fish", Name = "Nemo" }
                },
                FoodPreferences = new List<string> { "Fish Flakes", "Seaweed" }
            },
            new Customer
            {
                Name = "Billy",
                PhoneNumber = "123-456-7890",
                Email = "billy@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Dog", Name = "Rover" },
                    new Pet { Type = "Cat", Name = "Whiskers" }
                },
                FoodPreferences = new List<string> { "Kibble", "Chicken", "Carrots" }
            },
            new Customer
            {
                Name = "Bob",
                PhoneNumber = "987-654-3210",
                Email = "bob@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Turtle", Name = "Shelly" }
                },
                FoodPreferences = new List<string> { "Lettuce", "Cucumber", "Tomatoes" }
            },
            new Customer
            {
                Name = "Andrew",
                PhoneNumber = "555-555-5555",
                Email = "andrew@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Fish", Name = "Nemo" }
                },
                FoodPreferences = new List<string> { "Fish Flakes", "Seaweed" }
            },
            new Customer
            {
                Name = "Billy",
                PhoneNumber = "123-456-7890",
                Email = "billy@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Dog", Name = "Rover" },
                    new Pet { Type = "Cat", Name = "Whiskers" }
                },
                FoodPreferences = new List<string> { "Kibble", "Chicken", "Carrots" }
            },
            new Customer
            {
                Name = "Bob",
                PhoneNumber = "987-654-3210",
                Email = "bob@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Turtle", Name = "Shelly" }
                },
                FoodPreferences = new List<string> { "Lettuce", "Cucumber", "Tomatoes" }
            },
            new Customer
            {
                Name = "Andrew",
                PhoneNumber = "555-555-5555",
                Email = "andrew@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Fish", Name = "Nemo" }
                },
                FoodPreferences = new List<string> { "Fish Flakes", "Seaweed" }
            },
            new Customer
            {
                Name = "Billy",
                PhoneNumber = "123-456-7890",
                Email = "billy@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Dog", Name = "Rover" },
                    new Pet { Type = "Cat", Name = "Whiskers" }
                },
                FoodPreferences = new List<string> { "Kibble", "Chicken", "Carrots" }
            },
            new Customer
            {
                Name = "Bob",
                PhoneNumber = "987-654-3210",
                Email = "bob@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Turtle", Name = "Shelly" }
                },
                FoodPreferences = new List<string> { "Lettuce", "Cucumber", "Tomatoes" }
            },
            new Customer
            {
                Name = "Andrew",
                PhoneNumber = "555-555-5555",
                Email = "andrew@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Fish", Name = "Nemo" }
                },
                FoodPreferences = new List<string> { "Fish Flakes", "Seaweed" }
            },
            new Customer
            {
                Name = "Billy",
                PhoneNumber = "123-456-7890",
                Email = "billy@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Dog", Name = "Rover" },
                    new Pet { Type = "Cat", Name = "Whiskers" }
                },
                FoodPreferences = new List<string> { "Kibble", "Chicken", "Carrots" }
            },
            new Customer
            {
                Name = "Bob",
                PhoneNumber = "987-654-3210",
                Email = "bob@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Turtle", Name = "Shelly" }
                },
                FoodPreferences = new List<string> { "Lettuce", "Cucumber", "Tomatoes" }
            },
            new Customer
            {
                Name = "Andrew",
                PhoneNumber = "555-555-5555",
                Email = "andrew@example.com",
                Pets = new List<Pet>
                {
                    new Pet { Type = "Fish", Name = "Nemo" }
                },
                FoodPreferences = new List<string> { "Fish Flakes", "Seaweed" }
            },
        };
    }

    private List<Customer> FilteredCustomers => Customers
        .Where(c => string.IsNullOrWhiteSpace(SearchTerm) || c.Name.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase))
        .ToList();

    private void ToggleCustomerDetails(Customer customer)
    {
        if (ExpandedCustomer == customer)
        {
            ExpandedCustomer = null;
        }
        else
        {
            ExpandedCustomer = customer;
        }
    }

    public class Customer
    {
        public string Name { get; set; } = string.Empty;
        public string PhoneNumber { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public List<Pet> Pets { get; set; } = new();
        public List<string> FoodPreferences { get; set; } = new();
    }

    public class Pet
    {
        public string Type { get; set; } = string.Empty;
        public string Name { get; set; } = string.Empty;
    }
}
